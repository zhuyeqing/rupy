#summary Cloud Database.
#labels Phase-Design,Phase-Implementation

This requires latest [http://rupy.se/rupy.zip rupy] in hosted mode.

For true redundancy you need to use some custom cluster database since we [http://host.rupy.se host] across multiple colocations!
Ordinary databases are not secure or redundant in a distributed cluster environment out of the box, but most of all:

  _Database clients don't use async HTTP; you can't scale them easily._

On the other hand modern file systems are now cheap and fast (ext4) and async is becoming common place; See the entry on [https://code.google.com/p/rupy/wiki/Fuse FUSE] to learn more on how you can scale any [https://code.google.com/p/rupy/wiki/Process ÂµSOA] cluster with async HTTP.

ROOT takes a little bit from all NoSQL databases: document, key-value and graph; It's basically a key-value store (Base58-JSON) with indexing (that we call sort) on custom fields (including full text search) in the JSON and graph relationships between the key-values.

The JSON objects and indexes are stored as a plain file (symbolic hard link). The relations and full text search are just binary files with lists of longs (the hashed Base58 key). Simple, powerful and in line with both _Moore's_ and _Murphy's_ laws.

<font color="red">_Try the current version:</font> [http://root.rupy.se root.rupy.se]_

TODO:

  # ~~new [https://code.google.com/p/rupy/source/browse/trunk/src/se/rupy/http/Async.java async] client~~
  # ~~_edit node_~~
  # ~~_sort node_ text index~~
  # ~~_link node_ relation graph~~
  # ~~_find node_ full text search~~
  # ~~pagination in lists~~
  # optimize full text search
  # _trim node_ & _link_

Source: [http://root.rupy.se/code?path=/User.java User], [http://root.rupy.se/code?path=/Root.java Root]